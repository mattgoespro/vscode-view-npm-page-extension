 Usage  :
  Transpile and bundle one or more files.
    bun build     [flags]    <entrypoint>

 Flags:
        --production                      Set NODE_ENV=production and enable minification
        --compile                         Generate a standalone Bun executable containing your bundled code. Implies --production
        --bytecode                        Use a bytecode cache
        --watch                           Automatically restart the process on file change
        --no-clear-screen                 Disable clearing the terminal screen on reload when --watch is enabled
        --target=<val>                    The intended execution environment for the bundle. "browser", "bun" or "node"
        --outdir=<val>                    Default to "dist" if multiple files
        --outfile=<val>                   Write to a file
        --sourcemap=<val>                 Build with sourcemaps - 'linked', 'inline', 'external', or 'none'
        --banner=<val>                    Add a banner to the bundled output such as "use client"; for a bundle being used with RSCs
        --footer=<val>                    Add a footer to the bundled output such as // built with bun!
        --format=<val>                    Specifies the module format to build to. "esm", "cjs" and "iife" are supported. Defaults to "esm".
        --root=<val>                      Root directory used for multiple entry points
        --splitting                       Enable code splitting
        --public-path=<val>               A prefix to be appended to any import paths in bundled code
        -e  ,   --external=<val>                  Exclude module from transpilation (can use * wildcards). ex: -e react
        --packages=<val>                  Add dependencies to bundle or keep them external. "external", "bundle" is supported. Defaults to "bundle".
        --entry-naming=<val>              Customize entry point filenames. Defaults to "[dir]/[name].[ext]"
        --chunk-naming=<val>              Customize chunk filenames. Defaults to "[name]-[hash].[ext]"
        --asset-naming=<val>              Customize asset filenames. Defaults to "[name]-[hash].[ext]"
        --react-fast-refresh              Enable React Fast Refresh transform (does not emit hot-module code, use this for testing)
        --no-bundle                       Transpile file only, do not bundle
        --emit-dce-annotations            Re-emit DCE annotations in bundles. Enabled by default unless --minify-whitespace is passed.
        --minify                          Enable all minification flags
        --minify-syntax                   Minify syntax and inline data
        --minify-whitespace               Minify whitespace
        --minify-identifiers              Minify identifiers
        --css-chunking                    Chunk CSS files together to reduce duplicated CSS loaded in a browser. Only has an effect when multiple entrypoints import CSS
        --conditions=<val>                Pass custom conditions to resolve
        --app                             (EXPERIMENTAL) Build a web app for production using Bun Bake.
        --server-components               (EXPERIMENTAL) Enable server components
        --env=<val>                       Inline environment variables into the bundle as process.env.${name}. Defaults to 'disable'. To inline environment variables matching a prefix, use my prefix like 'FOO_PUBLIC_*'.
        --windows-hide-console            When using --compile targeting Windows, prevent a Command prompt from opening alongside the executable
        --windows-icon=<val>              When using --compile targeting Windows, assign an executable icon

 Examples:
    Frontend web apps:
    bun build     --outfile=bundle.js   ./src/index.ts
    bun build     --minify --splitting --outdir=out   /index.jsx ./lib/worker.ts

   [2mBundle code to be run in Bun (reduces server startup time)
    bun build     --target=bun --outfile=server.js    [34m./server.ts

   [2mCreating a standalone executable (see https://bun.sh/docs/bundler/executables)
    bun build     --compile --outfile=my-app    [34m./cli.ts

A full list of flags is available at  [35mhttps://bun.sh/docs/bundler
